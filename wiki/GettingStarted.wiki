#summary Getting started with jasima®.

= Introduction =

This tutorial will guide you through the initial steps of installing and using jasima® to create and run simulation experiments of an existing experiment class, and comprises




 All screenshots have been taken on a system running Windows 8, Eclipse Luna (4.4) and Excel 2013, and may differ slightly from what you see on your screen. The best way to use this guide is to work through the sections step-by-step without skipping any section.



Before proceeding with this tutorial, please make sure that Java SE Runtime Environment and Eclipse are installed on your system. You can find the latest versions at

http://www.oracle.com/technetwork/java/javase/downloads/index.html

and

https://www.eclipse.org/downloads/





= Installation =

The easiest way to install Jasima is using Maven, which automatically downloads and installs Jasima and all of its dependencies.  There is no need to manually install Jasima when building a Maven project that includes Jasima as a dependency.

== Manually building and installing Jasima ==

Jasima can either be downloaded as a source archive or checked out directly from the SVN server.

After obtaining the source code, Jasima can be installed using `mvn install` or an IDE.
This will run many tests cases which will take roughly ten minutes and can be skipped using the parameter `-Dmaven.test.skip=true`.
Likewise, adding `-Dmaven.javadoc.skip=true` will skip Javadoc generation.
The following files will be created:
  * `target/apidoc/*` - API documentation (can be skipped)
  * `target/jasima-main-VERSION-javadic.jar` - compressed API documentation (can be skipped)
  * `target/classes/*` - compiled Jasima classes
  * `target/jasima-main-VERSION.jar` - compressed Jasima classes
  * `target/jasima-main-VERSION-sources.jar` - compressed source coode
  * `target/lib/*` - Jasima's external dependencies
The `install` target will also copy the generated JAR files to your local reposirory.
If that's not intended, use `mvn package` instead, which accepts the same parameters and will generate the same set of files.

Although the build in the local repository will be preferred over any remote repository, it is a good idea to edit the `pom.xml` and add a version postfix when making code changes.

= Installing the Eclipse plugin =

This tutorial assumes that you will use Eclipse and the Jasima Eclipse plugin.
Instructions on using Jasima without Eclipse can be found in WithoutEclipse.

To install the plugin, use Help->Install New Software to add http://... as an update site and install the Jasima feature.
#TODO

= Using Jasima in a Maven project =

The plugin will add a wizard to create new Jasima projects.
It will automatically create a Java project with Maven enabled and a preconfigured `pom.xml` that includes Jasima as a dependency.

Continue with RunningAnExperiment.